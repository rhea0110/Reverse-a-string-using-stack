// Reverse a string using stack star_border
Given a string, the task is to reverse the string using stack data structure.

Complete the function reverseString() that accepts the string, and reverses the string.

#include<stdio.h>
#include<string.h>

#define SIZE 1000

int Stack[SIZE], top = -1;

int isFull()
{
  return top==(SIZE-1);
}

int isEmpty()
{
  return top==-1;
}

// Function to add an item to stack.
int push(int item)
{
  if (isFull())
  {
    return -1;
  }
  Stack[++top] = item;
}

// Function to remove an item from stack.
int pop()
{
  int temp;
  if (isEmpty())
  {
    return -1;
  }
  temp=Stack[top--];
  return temp;
}

char* reverseString(char *str)
{
int n = strlen(str);
  int i;
  for(i = 0; i < n; i++)
    push(str[i]);
  for(i = 0; i < n; i++)
    str[i] = pop();
  return str;
}

int main()
{
  int t, n, q1, q2;
  scanf("%d", &t);
  while(t--)
  {
    top = -1;
    char s1[SIZE];
    char *s = &s1[0];
    scanf("%d", &n);
    while(n--)
    {
      scanf("%s", s);
      s = reverseString(s);
      printf("%s\n", s);
    }
    printf("\n");
  }
  return 0;
}
